services:
  postgres:
    image: postgres:13-alpine
    volumes :
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
      - POSTGRES_DB=${PSQL_DATABASE}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PSQL_USER}", "-d", "${PSQL_DATABASE}"]
      interval: 5s
      timeout: 10s
      retries: 5
  rmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rmq:/var/lib/rabbitmq/
  
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - .env
    environment:
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET}
      - PSQL_HOST=postgres
      - PSQL_USER=${PSQL_USER}
      - PSQL_PASSWORD=${PSQL_PASSWORD}
      - PSQL_DB=${PSQL_DATABASE}
      - PSQL_PORT=5432
      - DEBUG_LEVEL=${DEBUG_LEVEL}
    command: bash -c "cd /api && npm install && npm run dev"
    volumes:
      - ./api:/api
    depends_on:
      - postgres
      - rmq

volumes:
  postgres:
  rmq:
